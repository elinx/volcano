apiVersion: v1
kind: ConfigMap
metadata:
  name: volcano-scheduler-configmap
  namespace: karmada-system
data:
  scheduler.conf: |
    actions: "cluster-allocate"
    tiers:
    - plugins:
      - name: cluster-affinity
      - name: cluster-locality
      - name: spread-constraint
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: volcano-scheduler
  namespace: karmada-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volcano-scheduler
  namespace: karmada-system
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "watch", "list", "create", "update", "delete"]
  - nonResourceURLs: ["*"]
    verbs: ["get"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "get", "list", "watch", "delete"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "update", "delete"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs/status"]
    verbs: ["update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods", "pods/status"]
    verbs:
      [
        "create",
        "get",
        "list",
        "watch",
        "update",
        "bind",
        "updateStatus",
        "delete",
        "patch",
      ]
  - apiGroups: [""]
    resources: ["pods/binding"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["resourcequotas"]
    verbs: ["list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources:
      ["storageclasses", "csinodes", "csidrivers", "csistoragecapacities"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["list", "watch"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["list", "watch"]
  - apiGroups: ["scheduling.k8s.io"]
    resources: ["priorityclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["queues"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["podgroups"]
    verbs: ["list", "watch", "update"]
  - apiGroups: ["nodeinfo.volcano.sh"]
    resources: ["numatopologies"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "create", "delete", "update"]
  - apiGroups: [""]
    resources: ["batchbindings"]
    verbs: ["get", "create"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volcano-scheduler-role
  namespace: karmada-system
subjects:
  - kind: ServiceAccount
    name: volcano-scheduler
    namespace: karmada-system
roleRef:
  kind: ClusterRole
  name: volcano-scheduler
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Service
metadata:
  name: volcano-scheduler
  labels:
    app: volcano-scheduler
spec:
  ports:
    - port: 80
      name: volcano-scheduler
  clusterIP: None
  selector:
    app: volcano-scheduler
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: volcano-scheduler
  namespace: karmada-system
  labels:
    app: volcano-scheduler
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: volcano-scheduler
  serviceName: "volcano-scheduler"
  template:
    metadata:
      labels:
        app: volcano-scheduler
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - volcano-scheduler
                topologyKey: kubernetes.io/hostname
              weight: 100
      serviceAccount: karmada-scheduler
      containers:
        - name: volcano-scheduler
          image: volcano-scheduler-linux-amd64:v1.6.0
          command:
            - /bin/sh
            - -c
            - /vc-scheduler --alsologtostderr --kubeconfig=/etc/kubeconfig --scheduler-conf=/volcano.scheduler/scheduler.conf --enable-healthz=true --enable-metrics=true -v=5 2>&1 | tee /var/log/volcano/scheduler.log
          imagePullPolicy: IfNotPresent
          env:
            - name: TOPOLOGY_AWARE_GPU_RESOURCE_LIST
              value: huawei.com/ascend-1980
            - name: BATCH_BIND_ENABLE
              value: "false"
            - name: BATCH_BIND_NUM
              value: "1"
            - name: MULTI_SCHEDULER_ENABLE
              value: "false"
            - name: SCHEDULER_NUM
              value: "1"
            - name: SCHEDULER_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: scheduler-config
              mountPath: /volcano.scheduler
            - name: volcano-scheduler-log
              mountPath: /var/log/volcano
            - mountPath: /etc/localtime
              name: localtime
              readOnly: true
            - name: kubeconfig
              subPath: kubeconfig
              mountPath: /etc/kubeconfig
      volumes:
        - name: scheduler-config
          configMap:
            defaultMode: 0640
            name: volcano-scheduler-configmap
        - name: volcano-scheduler-log
          hostPath:
            path: /var/paas/sys/log/volcano
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: kubeconfig
          secret:
            secretName: kubeconfig
